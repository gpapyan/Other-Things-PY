{"student_name": "write your name", "student_surname": "write your surname", "exam_content": {"1": {"question": "Which of the following is invalid?", "a": "none of the mentioned", "b": "__a = 1", "c": "__str__ = 1", "d": "_a = 1"}, "2": {"question": "Which of the following is not a keyword?", "a": "eval", "b": "assert", "c": "nonlocal", "d": "pass"}, "3": {"question": "Which is the correct operator for power(xy)?", "a": "X**y", "b": "X^y", "c": "X^^y", "d": "None of the mentioned"}, "4": {"question": "Which one of the following has the highest precedence in the expression?", "a": "Parentheses", "b": "Addition", "c": "Multiplication", "d": "Exponential"}, "5": {"question": "What is the average value of the following Python code snippet?\n>>>grade1 = 80\n>>>grade2 = 90\n>>>average = (grade1 + grade2) / 2", "a": "85.0", "b": "85.1", "c": "95.0", "d": "95.1"}, "6": {"question": "Select all options that print.\nHello-how-are-you", "a": "print(\u2018hello-\u2018 + \u2018how-are-you\u2019)", "b": "print(\u2018hello\u2019, \u2018how\u2019, \u2018are\u2019, \u2018you\u2019 + \u2018-\u2018 * 4)", "c": "print(\u2018hello\u2019, \u2018how\u2019, \u2018are\u2019, \u2018you\u2019)", "d": "print(\u2018hello\u2019 + \u2018-\u2018 + \u2018how\u2019 + \u2018-\u2018 + \u2018are\u2019 + \u2018you\u2019)"}, "7": {"question": "What does 3 ^ 4 evaluate to?", "a": "7", "b": "12", "c": "0.75", "d": "81"}, "8": {"question": "What is the result of cmp(3, 1)?", "a": "1", "b": "0", "c": "True", "d": "False"}, "9": {"question": "Which of the following expressions is an example of type conversion?", "a": "4.0 + float(3)", "b": "5.3 + 6.3", "c": "5.0 + 3", "d": "3 + 7"}, "10": {"question": "What is the value of the following expression?\n2+4.00, 2**4.0", "a": "(6.0, 16.0)", "b": "(6.00, 16.00)", "c": "(6, 16)", "d": "(6.00, 16.0)"}, "11": {"question": "It is not possible for the two\u2019s complement value to be equal to the original value in any case.", "a": "False", "b": "True", "c": "non option", "d": "non option"}, "12": {"question": "What will be the value of x in the following Python expression, if the result of that expression is 2?\nx>>2", "a": "8", "b": "4", "c": "2", "d": "1"}, "13": {"question": "What will be the output of the following Python code if the system date is 21st June, 2017 (Wednesday)?\n[] or {}\n{} or []", "a": "{}\n[]", "b": "[]\n[]", "c": "[]\n{}", "d": "{}\n{}"}, "14": {"question": "What will be the output of the following Python code snippet?\nX=3.3456789\n%s' %x, str(x)", "a": "(\u20183.3456789\u2019, \u20183.3456789\u2019)", "b": "Error", "c": "(3.3456789, 3.3456789)", "d": "(\u20183.3456789\u2019, 3.3456789)"}, "15": {"question": "What will be the output of the following Python code snippet?\nX=3.3456789\n%f | %e | %g' %(x, x, x)", "a": "\u20183.345679 | 3.345679e+00 | 3.34568\u2019", "b": "\u20183.3456789 | 3.3456789+00 | 3.345678\u2019", "c": "\u20183.345678 | 3.345678e+0 | 3.345678\u2019", "d": "Error"}, "16": {"question": "What will be the output of the following Python code?\nl=list('HELLO')\np=l[0], l[-1], l[1:3]\na={0}, b={1}, c={2}'.format(*p)", "a": "\u201ca=H, b=O, c=[\u2018E\u2019, \u2018L\u2019]\u201d", "b": "\u201ca=\u2019H\u2019, b=\u2019O\u2019, c=(E, L)\u201d", "c": "Error", "d": "Junk value"}, "17": {"question": "What will be the output of the following Python code?\nD=dict(p='san', q='foundry')\n{p}{q}'.format(**D)", "a": "sanfoundry", "b": "Error", "c": "san foundry", "d": "{\u2018san\u2019, \u2018foundry\u2019}"}, "18": {"question": "The ______ symbol along with the name of the decorator function can be placed above the definition of the function to be decorated works as an alternate way for decorating a function.", "a": "@", "b": "$", "c": "#", "d": "&"}, "19": {"question": "What will be the output of the following Python code?\ndef f(x):\n    def f1(*args, **kwargs):\n        Print(\"*\", 5)\n        x(*args, **kwargs)\n        Print(\"*\", 5)\n   Return f1\n@f\ndef p(m):\np(m)\nprint(\"hello\")", "a": "hello", "b": "*****\n*****\nHello", "c": "*****", "d": "*****\nHello"}, "20": {"question": "What will be the output of the following Python code?\nD = {0, 1, 2}\nfor x in d:\nprint(x)", "a": "0 1 2", "b": "{0, 1, 2} {0, 1, 2} {0, 1, 2}", "c": "error", "d": "none of the mentioned"}, "21": {"question": "What will be the output of the following Python code?\nx = 'abcd'\nfor i in range(len(x)):\nprint(i.upper())", "a": "error", "b": "0 1 2 3", "c": "a b c d", "d": "1 2 3 4"}, "22": {"question": "What will be the output of the following Python code snippet?\nprint('0xa'.isdigit())", "a": "False", "b": "True", "c": "None", "d": "Error"}, "23": {"question": "What will be the output of the following Python code?\nprint('abcdef'.partition('cd'))", "a": "(\u2018ab\u2019, \u2018cd\u2019, \u2018ef\u2019)", "b": "(\u2018abef\u2019)", "c": "(\u2018ab\u2019, \u2018ef\u2019)", "d": "2"}, "24": {"question": "What will be the output of the following Python code? data = [[[1, 2], [3, 4]], [[5, 6], [7, 8]]] def ttt(m): v = m[0][0] for row in m: for element in row: if v < element: v = element return v print(ttt(data[0]))", "a": "4", "b": "2", "c": "1", "d": "5"}, "25": {"question": "Which of the following is the correct expansion of list_1 = [expr(i) for i in list_0 if func(i)]?", "a": "list_1 = [] for i in list_0: if func(i): list_1.append(expr(i))", "b": "for i in list_0: if func(i): list_1.append(expr(i))", "c": "list_1 = [] for i in list_0: if func(i): list_1.append(i)", "d": "none of the mentioned"}, "26": {"question": "What will be the output of the following Python code? l1=[10, 20, 30] l2=[-10, -20, -30] l3=[x+y for x, y in zip(l1, l2)] l3", "a": "[0, 0, 0]", "b": "0", "c": "[-20, -60, -80]", "d": "Error"}, "27": {"question": "What will be the output of the following Python code? >>> a=(1,2) >>> b=(3,4) >>> c=a+b >>> c", "a": "(1,2,3,4)", "b": "(4,6)", "c": "Error as tuples are immutable", "d": "None"}, "28": {"question": "Is the following Python code valid? >>> a,b,c=1,2,3 >>> a,b,c", "a": "Yes, (1,2,3) is printed", "b": "No, invalid syntax", "c": "Yes, [1,2,3] is printed", "d": "1 is printed"}, "29": {"question": "What will be the output of the following Python code snippet? {a**2 for a in range(4)}", "a": "{0, 1, 4, 9}", "b": "{0, 1, 4, 9, 16}", "c": "Error", "d": "{1, 4, 9, 16}"}, "30": {"question": "If b is a dictionary, what does any(b) do?", "a": "Returns True if any key of the dictionary is true", "b": "Returns False if dictionary is empty", "c": "Returns True if all keys of the dictionary are true", "d": "Method any() doesn\u2019t exist for dictionary"}, "31": {"question": "What will be the output of the following Python code? >>> a={\"a\":1,\"b\":2,\"c\":3} >>> b=dict(zip(a.values(),a.keys())) >>> b", "a": "{1: \u2018a\u2019, 2: \u2018b\u2019, 3: \u2018c\u2019}", "b": "An exception is thrown", "c": "{\u2018a\u2019: \u2018b\u2019: \u2018c\u2019: }", "d": "{\u2018a\u2019: 1, \u2018b\u2019: 2, \u2018c\u2019: 3}"}, "32": {"question": "What will be the output of the following Python function? float(\u2018-infinity\u2019) float(\u2018inf\u2019)", "a": "\u2013inf inf", "b": "\u2013infinity inf", "c": "Error Error", "d": "Error Junk value"}, "33": {"question": "What will be the output of the following Python code? lamb = lambda x: x ** 3 print(lamb(5))", "a": "125", "b": "555", "c": "15", "d": "None of the mentioned"}, "34": {"question": "What will be the output of the following Python code? x = 50 def func(x): print('x is', x) x = 2 print('Changed local x to', x) func(x) print('x is now', x)", "a": "x is 50 Changed local x to 2 x is now 50", "b": "x is 50 Changed local x to 2 x is now 2", "c": "x is 50 Changed local x to 2 x is now 100", "d": "None of the mentioned"}, "35": {"question": "What is the length of sys.argv?", "a": "number of arguments + 1", "b": "number of arguments", "c": "number of arguments \u2013 1", "d": "none of the mentioned"}, "36": {"question": "What will be the output of the following Python code? def foo(x): x[0] = ['def'] x[1] = ['abc'] return id(x) q = ['abc', 'def'] print(id(q) == foo(q))", "a": "True", "b": "False", "c": "None", "d": "Error"}, "37": {"question": "What will be the output of the following Python code? def f1(): x=15 print(x) x=12 f1()", "a": "15", "b": "12", "c": "Error", "d": "1512"}, "38": {"question": "On assigning a value to a variable inside a function, it automatically becomes a global variable.", "a": "False", "b": "True", "c": "non option", "d": "non option"}, "39": {"question": "Which is the most appropriate definition for recursion?", "a": "A function execution instance that calls another execution instance of the same function", "b": "A function that calls itself", "c": "A class method that calls another class method", "d": "An in-built method that is automatically called"}, "40": {"question": "What will be the output of the following Python code? def test(i,j): if(i==0): return j else: return test(i-1,i+j) print(test(4,7))", "a": "17", "b": "7", "c": "Infinite loop", "d": "13"}, "41": {"question": "What will be the output of the following Python code? def check(n): if n < 2: return n % 2 == 0 return check(n - 2) print(check(11))", "a": "False", "b": "True", "c": "1", "d": "An exception is thrown"}, "42": {"question": "The nested list undergoes shallow copy even when the list as a whole undergoes deep copy.", "a": "True", "b": "False", "c": "non option", "d": "non option"}, "43": {"question": "What will be the output of the following Python code? list(map((lambda x:x^2), range(10)))", "a": "[2, 3, 0, 1, 6, 7, 4, 5, 10, 11]", "b": "Error", "c": "[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]", "d": "No output"}, "44": {"question": "What will be the output of the following Python code? list(map((lambda x:x**2), filter((lambda x:x%2==0), range(10))))", "a": "[0, 4, 16, 36, 64]", "b": "[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]", "c": "Error", "d": "No output"}, "45": {"question": "What will be the output of the following Python code? x = ['ab', 'cd'] print(len(list(map(list, x))))))", "a": "error", "b": "4", "c": "2", "d": "none of the mentioned"}, "46": {"question": "What will be the output of the following Python code? x = [12, 34] print(len(''.join(list(map(int, x)))))", "a": "error", "b": "2", "c": "4", "d": "none of the mentioned"}, "47": {"question": "Which of the following is not a valid namespace?", "a": "Public namespace", "b": "Global namespace", "c": "Built-in namespace", "d": "Local namespace"}, "48": {"question": "In top-down design every module is broken into same number of submodules.", "a": "False", "b": "True", "c": "non option", "d": "non option"}, "49": {"question": "What is x if x = math.isfinite(float(\u20180.0\u2019))?", "a": "True", "b": "False", "c": "None", "d": "error"}, "50": {"question": "What is the result of math.trunc(3.1)?", "a": "3", "b": "3.0", "c": "0.1", "d": "1"}}}